{"version":3,"file":"static/webpack/static/development/pages/index.js.a835a34d4605ae66dbb7.hot-update.js","sources":["webpack:///./components/TaxFilingCard.js"],"sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\n\nimport {\n    Button, ButtonGroup, Card, CardBody, CardHeader,\n    Label, UncontrolledPopover, PopoverHeader, PopoverBody,\n} from 'reactstrap';\n\nconst useState = () => {\n    const state = useSelector(\n        ({ filingStatus, filingYear }) => {\n            return {\n                filingYear,\n                filingStatus,\n            };\n        },\n        shallowEqual,\n    );\n\n    const dispatch = useDispatch();\n\n    const setFilingYear = (val) => {\n        return dispatch({\n            type: 'SET_FILING_YEAR',\n            payload: val,\n        });\n    };\n\n    const setFilingStatus = (val) => {\n        return dispatch({\n            type: 'SET_FILING_STATUS',\n            payload: val,\n        });\n    };\n\n    return { state, setFilingYear, setFilingStatus };\n};\n\nconst TaxFilingCard = () => {\n\n    const { state, setFilingYear, setFilingStatus } = useState();\n\n    return (\n        <Card className={ ' tax-filing-card' }>\n            <CardHeader>Tax Filing Status</CardHeader>\n            <CardBody>\n\n                <Label>\n                    Did you file your 2019 taxes? {' '} &nbsp;\n                    <Button style={ { fontSize: '12px', fontWeight: '700' } } outline\n                        type=\"button\" id=\"fileTaxPopover\" color=\"secondary\" size=\"sm\">\n                        Info\n                    </Button>\n                    <UncontrolledPopover trigger=\"focus\" placement=\"top\" target=\"fileTaxPopover\">\n                        <PopoverBody>\n                            If you filed both 2019 and 2018, your 2019 filing will be used.\n                            You must have filed either 2019 or 2018 taxes to qualify.\n                            If you have not filed 2018, or do not qualify for 2018 filing\n                            (e.g. you were a dependent), file your 2019 ASAP.\n                        </PopoverBody>\n                    </UncontrolledPopover>\n                </Label>\n                <ButtonGroup>\n                    <Button outline color=\"primary\"\n                        onClick={ () => { return setFilingYear(2019); } }\n                        active={ state.filingYear === 2019 }>\n                        Yes\n                    </Button>\n                    <Button outline color=\"primary\"\n                        onClick={ () => { return setFilingYear(2018); } }\n                        active={ state.filingYear === 2018 }>\n                        No\n                    </Button>\n                </ButtonGroup>\n\n                <hr/>\n\n                <Label>\n                    Were you claimed as a dependent? {' '} &nbsp;\n                    <Button style={ { fontSize: '12px', fontWeight: '700' } } outline\n                            type=\"button\" id=\"fileTaxPopover\" color=\"secondary\" size=\"sm\">\n                        Info\n                    </Button>\n                    <UncontrolledPopover trigger=\"focus\" placement=\"top\" target=\"fileTaxPopover\">\n                        <PopoverBody>\n                            If you filed both 2019 and 2018, your 2019 filing will be used.\n                            You must have filed either 2019 or 2018 taxes to qualify.\n                            If you have not filed 2018, or do not qualify for 2018 filing\n                            (e.g. you were a dependent), file your 2019 ASAP.\n                        </PopoverBody>\n                    </UncontrolledPopover>\n                </Label>\n                <ButtonGroup>\n                    <Button outline color=\"primary\"\n                            onClick={ () => { return setFilingYear(2019); } }\n                            active={ state.filingYear === 2019 }>\n                        Yes\n                    </Button>\n                    <Button outline color=\"primary\"\n                            onClick={ () => { return setFilingYear(2018); } }\n                            active={ state.filingYear === 2018 }>\n                        No\n                    </Button>\n                </ButtonGroup>\n\n                <hr/>\n\n                <Label>Filing status for <u>{state.filingYear}</u>:</Label>\n                <ButtonGroup>\n                    <Button outline color=\"primary\"\n                        onClick={ () => { return setFilingStatus(1); } }\n                        active={ state.filingStatus === 1 }>\n                        Single\n                    </Button>\n                    <Button outline color=\"primary\"\n                        onClick={ () => { return setFilingStatus(2); } }\n                        active={ state.filingStatus === 2 }>\n                        Married\n                    </Button>\n                    <Button outline color=\"primary\"\n                        onClick={ () => { return setFilingStatus(3); } }\n                        active={ state.filingStatus === 3 }>\n                        Head of Household\n                    </Button>\n                </ButtonGroup>\n\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default TaxFilingCard;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;A","sourceRoot":""}